@model IEnumerable<AspCrud.Models.StudentDetails>
@{
    ViewBag.Title = "Home Page";
}

@{
    if (Session["UserID"] == null)
    {
        <h2>Kindly login to view students</h2>
        <div class="my-2 my-lg-0">
            @Html.ActionLink("Login", "Login", "Account", new { area = "" }, new { @class = "btn btn-primary my-2 my-sm-0" })
            &nbsp;
            @Html.ActionLink("Create Account", "Register", "Account", new { area = "" }, new { @class = "btn btn-warning my-2 my-sm-0" })

        </div>
    }
    else
    {
        <h2>
            List of Students
            <a class="btn btn-dark" style="float:right" href="/Home/AddStudent">Add Student</a>
        </h2>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">ID</th>
                    <th scope="col">Name</th>
                    <th scope="col">Department</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>

                @{int i = 1; }
                @foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">@i</th>
                        <th scope="row">
                            STD-@Html.DisplayFor(modelItem => item.ID)
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Department)
                        </td>
                        <td>
                            <a href="@Url.Action("EditStudent", "Home", new { id = item.ID })" class="text-primary">
                                <i class="icon-edit"></i>
                                Edit
                            </a>
                            <br />
                            <a href="" class="text-danger DeleteSTD" id="@item.ID">
                                <i class="icon-trash"></i>
                                Delete
                            </a>
                        </td>
                    </tr>
                    i++;
                }

            </tbody>
        </table>
    }
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*Rendering JS file of sweetalert*@
    @Scripts.Render("~/bundles/sweetalert")

    <script type="text/javascript">
        // Delete confirmation
        $(".DeleteSTD").click(function () {
            var id = $(this).attr('id');

            Swal.fire({
              title: 'Delete Student?',
              text: 'This action will permanently delete student',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    location.href = '@Url.Action("DeleteStudent", "Home")'+ '/' + id;
                } else {
                    return false;
                }
            })
            return false;
        });
    </script>

    @{
        //Initializing Notification
        int Notification = 0;
        try
        {
            /*
             * try block to check if Session["Notification"] exist
             * if exist then convert  string to int
             */
            Notification = Convert.ToInt32(Session["Notification"]);
        }
        catch
        { }
        if (Notification == 1) //insert success
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'success',
                    title: 'Student added successfully!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 2) //insert failure
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'error',
                    title: 'Student added failed!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 3) //update success
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'success',
                    title: 'Student updated successfully!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 4) //update failed
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'error',
                    title: 'Student update failed!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 5) //delete success
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'success',
                    title: 'Student deleted successfully!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 6) //delete failed
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'error',
                    title: 'Student delete failed!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
    }

}


